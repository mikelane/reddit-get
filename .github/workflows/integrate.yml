name: Reddit-Get Continuous Integration

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  build_and_test_pr:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python-version:
          - 3.6.x
          - 3.7.x
          - 3.8.x
          - 3.9.x
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Display Python Version
        run: |
          python --version
          pip --version
      - name: Update pip, setuptools, and wheel
        run: pip install -U pip setuptools wheel
      - name: Setup Poetry
        uses: Gr1N/setup-poetry@v4
        with:
          poetry-preview: true
      - name: Display Poetry Version
        run: poetry --version
      - name: Cache Dependencies
        uses: actions/cache@v1
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
      - name: Install Poetry Dependencies
        run: poetry install -vvv
      - name: Run Pytest with Black, isort, and coverage
        run: poetry run pytest -vvv --black --isort --force-sugar --tb=native --cov=reddit_get --cov-fail-under=90 --cov-report=xml:"docs/coverage/$GITHUB_WORKFLOW-$GITHUB_SHA-report.xml" --numprocesses=auto --color=yes --code-highlight=yes --durations=10
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          name: codecov-umbrella
          fail_ci_if_error: true
          path_to_write_report: .docs/coverage/${{ github.workflow }}-${{ github.sha }}-report.xml
          verbose: true
