name: Reddit-Get Deployment

on:
  release:
    branches: [ main ]
    types: [ published ]  # published means created but not draft or prerelease

jobs:
  test_build_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4.8.0
        with:
          python-version: 3.11.x

      - name: Update pip, setuptools, and wheel
        run: pip install -U pip setuptools wheel

      - name: Setup Poetry
        uses: abatilo/actions-poetry@v3.0.1
        with:
          poetry-preview: true

      - name: Display Python Version
        run: |
          python --version
          pip --version
          poetry --version

      - name: Cache Dependencies
        uses: actions/cache@v3.3.3
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install Poetry Dependencies
        run: poetry install -vvv

      - name: Run pytest with black, isort, and coverage
        run: poetry run pytest -vvv --mypy --black --isort --cov=reddit_get --cov-fail-under=90 --cov-report=xml:docs/coverage/deployment/report.xml --numprocesses=auto --color=yes

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v3.1.4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          name: codecov-umbrella
          fail_ci_if_error: true

      - name: Build Wheel
        run: poetry build -vvv

      - name: Configure Poetry for PyPI
        env:
          PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          poetry config pypi-token.pypi $PYPI_API_TOKEN

      - name: Deploy to PyPI
        run: poetry publish
